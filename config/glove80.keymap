/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers
#define L_BASE 0
#define L_NAV 1
#define L_FUN 2
#define L_GAME 3

// To deal with the situation where there is no Lower layer, to keep &lower happy
#ifndef L_Lower
#define L_Lower 0
#endif

// Aliases
#define HRM_S &hml LALT S
#define HRM_D &hml LCTRL D
#define HRM_F &qhml LSHFT F

#define HRM_J &qhmr RSHFT J
#define HRM_K &hmr RCTRL K
#define HRM_L &hmr RALT L

#define _________ &trans
#define NAV_BS &lt L_NAV BSPC
#define FUN_SPC &lt L_FUN SPACE
#define TOG_GAME &tog L_GAME

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
    mods = <MOD_LSFT>;
};

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                            5  6  7  8  9
                         16 17 18 19 20 21
                         28 29 30 31 32 33
                         40 41 42 43 44 45
                55 55 57 58 59 60 61 62 63
                72 73 74    75 76 77 78 79
            >;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                   0  1  2  3  4
                10 11 12 13 14 15
                22 23 24 25 26 27
                34 35 36 37 38 39
                46 47 48 49 50 51 52 53 54
                64 65 66 67 68    69 70 71
            >;
            hold-trigger-on-release;
        };

        qhml: quick_home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <235>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                            5  6  7  8  9
                         16 17 18 19 20 21
                         28 29 30 31 32 33
                         40 41 42 43 44 45
                55 55 57 58 59 60 61 62 63
                72 73 74    75 76 77 78 79
            >;
            hold-trigger-on-release;
        };

        qhmr: quick_home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <235>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                   0  1  2  3  4
                10 11 12 13 14 15
                22 23 24 25 26 27
                34 35 36 37 38 39
                46 47 48 49 50 51 52 53 54
                64 65 66 67 68    69 70 71
            >;
            hold-trigger-on-release;
        };
    };

    macros {
        status: rgb_ug_status_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_left_brace {
            key-positions = <24 25>;
            bindings = <&kp LBRC>;
        };

        combo_right_brace {
            key-positions = <25 26>;
            bindings = <&kp RBRC>;
        };

        combo_left_bracket {
            key-positions = <29 30>;
            bindings = <&kp LBKT>;
        };

        combo_right_bracket {
            key-positions = <30 31>;
            bindings = <&kp RBKT>;
        };

        combo_capsword {
            key-positions = <38 41>;
            bindings = <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        l_base {
            bindings = <
_________ _________ _________ _________ _________                                                                                 _________ _________ _________ _________ _________
&kp GRAVE &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                                                                &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS
&kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T                                                                 &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSLH
&kp ESC   &kp A     HRM_S     HRM_D     HRM_F     &kp G                                                                 &kp H     HRM_J     HRM_K     HRM_L     &kp SEMI  &kp SQT
_________ &kp Z     &kp X     &kp C     &kp V     &kp B     _________ _________ TOG_GAME  _________ _________ _________ &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp EQUAL
&status   _________ _________ _________ _________           NAV_BS    &kp LCTRL _________ _________ &kp RET   FUN_SPC             _________ _________ _________ _________ _________
            >;
        };

        l_nav {
            bindings = <
_________ _________ _________ _________ _________                                                                                 _________ _________ _________ _________ _________
_________ _________ _________ _________ _________ _________                                                             _________ _________ _________ _________ _________ _________
_________ _________ _________ _________ _________ _________                                                             &kp HOME  &kp PG_DN &kp PG_UP &kp END   _________ _________
_________ _________ _________ _________ _________ _________                                                             &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT _________ _________
_________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________
_________ _________ _________ _________ _________           _________ _________ _________ _________ _________ _________           _________ _________ _________ _________ _________
            >;
        };

        l_fun {
            bindings = <
_________ _________ _________ _________ _________                                                                                 _________ _________ _________ _________ _________
_________ &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                                                                &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   _________
_________ _________ _________ _________ _________ _________                                                             _________ _________ _________ &kp F11   &kp F12   _________
_________ _________ _________ _________ _________ _________                                                             _________ _________ _________ _________ _________ _________
_________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________ _________
_________ _________ _________ _________ _________           _________ _________ _________ _________ _________ _________ _________           _________ _________ _________ _________
            >;
        };

        l_game {
            bindings = <
&kp F1    &kp F2    &kp F3    &kp F4    &kp F5                                                                                    &kp F6    &kp F7    &kp F8    &kp F9    &kp F10
&kp GRAVE &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                                                                &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS
&kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T                                                                 &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSLH
&kp ESC   &kp A     &kp S     &kp D     &kp F     &kp G                                                                 &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
&kp LSHFT &kp Z     &kp X     &kp C     &kp V     &kp B     _________ _________ TOG_GAME  _________ _________ _________ &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp EQUAL
&kp LCTRL _________ _________ _________ _________           &kp BSPC  &kp LCTRL _________ _________ &kp RET   &kp SPACE           _________ _________ _________ _________ _________
            >;
        };
    };
};
